// source: flibuserver/proto/flibustier.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.flibustier.AuthorBooksRequest', null, global);
goog.exportSymbol('proto.flibustier.AuthorName', null, global);
goog.exportSymbol('proto.flibustier.Book', null, global);
goog.exportSymbol('proto.flibustier.EntityBookResponse', null, global);
goog.exportSymbol('proto.flibustier.EntityName', null, global);
goog.exportSymbol('proto.flibustier.EntityName.NameCase', null, global);
goog.exportSymbol('proto.flibustier.EntryType', null, global);
goog.exportSymbol('proto.flibustier.FoundEntry', null, global);
goog.exportSymbol('proto.flibustier.ListTrackedEntriesRequest', null, global);
goog.exportSymbol('proto.flibustier.ListTrackedEntriesResponse', null, global);
goog.exportSymbol('proto.flibustier.SearchRequest', null, global);
goog.exportSymbol('proto.flibustier.SearchResponse', null, global);
goog.exportSymbol('proto.flibustier.SequenceBooksRequest', null, global);
goog.exportSymbol('proto.flibustier.TrackEntryResponse', null, global);
goog.exportSymbol('proto.flibustier.TrackEntryResult', null, global);
goog.exportSymbol('proto.flibustier.TrackedEntry', null, global);
goog.exportSymbol('proto.flibustier.TrackedEntryKey', null, global);
goog.exportSymbol('proto.flibustier.UntrackEntryResponse', null, global);
goog.exportSymbol('proto.flibustier.UntrackEntryResult', null, global);
goog.exportSymbol('proto.flibustier.UpdateCheckRequest', null, global);
goog.exportSymbol('proto.flibustier.UpdateCheckResponse', null, global);
goog.exportSymbol('proto.flibustier.UpdateRequired', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flibustier.SearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flibustier.SearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flibustier.SearchRequest.displayName = 'proto.flibustier.SearchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flibustier.FoundEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flibustier.FoundEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flibustier.FoundEntry.displayName = 'proto.flibustier.FoundEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flibustier.SearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flibustier.SearchResponse.repeatedFields_, null);
};
goog.inherits(proto.flibustier.SearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flibustier.SearchResponse.displayName = 'proto.flibustier.SearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flibustier.Book = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flibustier.Book, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flibustier.Book.displayName = 'proto.flibustier.Book';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flibustier.TrackedEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flibustier.TrackedEntry.repeatedFields_, null);
};
goog.inherits(proto.flibustier.TrackedEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flibustier.TrackedEntry.displayName = 'proto.flibustier.TrackedEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flibustier.UpdateRequired = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flibustier.UpdateRequired.repeatedFields_, null);
};
goog.inherits(proto.flibustier.UpdateRequired, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flibustier.UpdateRequired.displayName = 'proto.flibustier.UpdateRequired';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flibustier.UpdateCheckRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flibustier.UpdateCheckRequest.repeatedFields_, null);
};
goog.inherits(proto.flibustier.UpdateCheckRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flibustier.UpdateCheckRequest.displayName = 'proto.flibustier.UpdateCheckRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flibustier.UpdateCheckResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flibustier.UpdateCheckResponse.repeatedFields_, null);
};
goog.inherits(proto.flibustier.UpdateCheckResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flibustier.UpdateCheckResponse.displayName = 'proto.flibustier.UpdateCheckResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flibustier.SequenceBooksRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flibustier.SequenceBooksRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flibustier.SequenceBooksRequest.displayName = 'proto.flibustier.SequenceBooksRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flibustier.AuthorBooksRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flibustier.AuthorBooksRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flibustier.AuthorBooksRequest.displayName = 'proto.flibustier.AuthorBooksRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flibustier.EntityBookResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flibustier.EntityBookResponse.repeatedFields_, null);
};
goog.inherits(proto.flibustier.EntityBookResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flibustier.EntityBookResponse.displayName = 'proto.flibustier.EntityBookResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flibustier.AuthorName = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flibustier.AuthorName, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flibustier.AuthorName.displayName = 'proto.flibustier.AuthorName';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flibustier.EntityName = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.flibustier.EntityName.oneofGroups_);
};
goog.inherits(proto.flibustier.EntityName, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flibustier.EntityName.displayName = 'proto.flibustier.EntityName';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flibustier.TrackedEntryKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flibustier.TrackedEntryKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flibustier.TrackedEntryKey.displayName = 'proto.flibustier.TrackedEntryKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flibustier.TrackEntryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flibustier.TrackEntryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flibustier.TrackEntryResponse.displayName = 'proto.flibustier.TrackEntryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flibustier.ListTrackedEntriesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flibustier.ListTrackedEntriesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flibustier.ListTrackedEntriesRequest.displayName = 'proto.flibustier.ListTrackedEntriesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flibustier.ListTrackedEntriesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flibustier.ListTrackedEntriesResponse.repeatedFields_, null);
};
goog.inherits(proto.flibustier.ListTrackedEntriesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flibustier.ListTrackedEntriesResponse.displayName = 'proto.flibustier.ListTrackedEntriesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flibustier.UntrackEntryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flibustier.UntrackEntryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flibustier.UntrackEntryResponse.displayName = 'proto.flibustier.UntrackEntryResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flibustier.SearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flibustier.SearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flibustier.SearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.SearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    searchTerm: jspb.Message.getFieldWithDefault(msg, 1, ""),
    entryTypeFilter: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flibustier.SearchRequest}
 */
proto.flibustier.SearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flibustier.SearchRequest;
  return proto.flibustier.SearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flibustier.SearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flibustier.SearchRequest}
 */
proto.flibustier.SearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchTerm(value);
      break;
    case 2:
      var value = /** @type {!proto.flibustier.EntryType} */ (reader.readEnum());
      msg.setEntryTypeFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flibustier.SearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flibustier.SearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flibustier.SearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.SearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSearchTerm();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEntryTypeFilter();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string search_term = 1;
 * @return {string}
 */
proto.flibustier.SearchRequest.prototype.getSearchTerm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flibustier.SearchRequest} returns this
 */
proto.flibustier.SearchRequest.prototype.setSearchTerm = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EntryType entry_type_filter = 2;
 * @return {!proto.flibustier.EntryType}
 */
proto.flibustier.SearchRequest.prototype.getEntryTypeFilter = function() {
  return /** @type {!proto.flibustier.EntryType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.flibustier.EntryType} value
 * @return {!proto.flibustier.SearchRequest} returns this
 */
proto.flibustier.SearchRequest.prototype.setEntryTypeFilter = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flibustier.FoundEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.flibustier.FoundEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flibustier.FoundEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.FoundEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    entryName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    author: jspb.Message.getFieldWithDefault(msg, 3, ""),
    entryId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    numEntities: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flibustier.FoundEntry}
 */
proto.flibustier.FoundEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flibustier.FoundEntry;
  return proto.flibustier.FoundEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flibustier.FoundEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flibustier.FoundEntry}
 */
proto.flibustier.FoundEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.flibustier.EntryType} */ (reader.readEnum());
      msg.setEntryType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntryName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthor(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEntryId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumEntities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flibustier.FoundEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flibustier.FoundEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flibustier.FoundEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.FoundEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getEntryName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAuthor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEntryId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getNumEntities();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional EntryType entry_type = 1;
 * @return {!proto.flibustier.EntryType}
 */
proto.flibustier.FoundEntry.prototype.getEntryType = function() {
  return /** @type {!proto.flibustier.EntryType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.flibustier.EntryType} value
 * @return {!proto.flibustier.FoundEntry} returns this
 */
proto.flibustier.FoundEntry.prototype.setEntryType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string entry_name = 2;
 * @return {string}
 */
proto.flibustier.FoundEntry.prototype.getEntryName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flibustier.FoundEntry} returns this
 */
proto.flibustier.FoundEntry.prototype.setEntryName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string author = 3;
 * @return {string}
 */
proto.flibustier.FoundEntry.prototype.getAuthor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flibustier.FoundEntry} returns this
 */
proto.flibustier.FoundEntry.prototype.setAuthor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 entry_id = 4;
 * @return {number}
 */
proto.flibustier.FoundEntry.prototype.getEntryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.flibustier.FoundEntry} returns this
 */
proto.flibustier.FoundEntry.prototype.setEntryId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 num_entities = 5;
 * @return {number}
 */
proto.flibustier.FoundEntry.prototype.getNumEntities = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.flibustier.FoundEntry} returns this
 */
proto.flibustier.FoundEntry.prototype.setNumEntities = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flibustier.SearchResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flibustier.SearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.flibustier.SearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flibustier.SearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.SearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    originalRequest: (f = msg.getOriginalRequest()) && proto.flibustier.SearchRequest.toObject(includeInstance, f),
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.flibustier.FoundEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flibustier.SearchResponse}
 */
proto.flibustier.SearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flibustier.SearchResponse;
  return proto.flibustier.SearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flibustier.SearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flibustier.SearchResponse}
 */
proto.flibustier.SearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flibustier.SearchRequest;
      reader.readMessage(value,proto.flibustier.SearchRequest.deserializeBinaryFromReader);
      msg.setOriginalRequest(value);
      break;
    case 2:
      var value = new proto.flibustier.FoundEntry;
      reader.readMessage(value,proto.flibustier.FoundEntry.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flibustier.SearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flibustier.SearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flibustier.SearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.SearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOriginalRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flibustier.SearchRequest.serializeBinaryToWriter
    );
  }
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.flibustier.FoundEntry.serializeBinaryToWriter
    );
  }
};


/**
 * optional SearchRequest original_request = 1;
 * @return {?proto.flibustier.SearchRequest}
 */
proto.flibustier.SearchResponse.prototype.getOriginalRequest = function() {
  return /** @type{?proto.flibustier.SearchRequest} */ (
    jspb.Message.getWrapperField(this, proto.flibustier.SearchRequest, 1));
};


/**
 * @param {?proto.flibustier.SearchRequest|undefined} value
 * @return {!proto.flibustier.SearchResponse} returns this
*/
proto.flibustier.SearchResponse.prototype.setOriginalRequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flibustier.SearchResponse} returns this
 */
proto.flibustier.SearchResponse.prototype.clearOriginalRequest = function() {
  return this.setOriginalRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flibustier.SearchResponse.prototype.hasOriginalRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated FoundEntry entry = 2;
 * @return {!Array<!proto.flibustier.FoundEntry>}
 */
proto.flibustier.SearchResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.flibustier.FoundEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flibustier.FoundEntry, 2));
};


/**
 * @param {!Array<!proto.flibustier.FoundEntry>} value
 * @return {!proto.flibustier.SearchResponse} returns this
*/
proto.flibustier.SearchResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.flibustier.FoundEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flibustier.FoundEntry}
 */
proto.flibustier.SearchResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.flibustier.FoundEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flibustier.SearchResponse} returns this
 */
proto.flibustier.SearchResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flibustier.Book.prototype.toObject = function(opt_includeInstance) {
  return proto.flibustier.Book.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flibustier.Book} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.Book.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bookId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flibustier.Book}
 */
proto.flibustier.Book.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flibustier.Book;
  return proto.flibustier.Book.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flibustier.Book} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flibustier.Book}
 */
proto.flibustier.Book.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBookId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flibustier.Book.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flibustier.Book.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flibustier.Book} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.Book.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBookId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string book_name = 1;
 * @return {string}
 */
proto.flibustier.Book.prototype.getBookName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flibustier.Book} returns this
 */
proto.flibustier.Book.prototype.setBookName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 book_id = 2;
 * @return {number}
 */
proto.flibustier.Book.prototype.getBookId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.flibustier.Book} returns this
 */
proto.flibustier.Book.prototype.setBookId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flibustier.TrackedEntry.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flibustier.TrackedEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.flibustier.TrackedEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flibustier.TrackedEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.TrackedEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    entryName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    entryId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    numEntries: jspb.Message.getFieldWithDefault(msg, 4, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    bookList: jspb.Message.toObjectList(msg.getBookList(),
    proto.flibustier.Book.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flibustier.TrackedEntry}
 */
proto.flibustier.TrackedEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flibustier.TrackedEntry;
  return proto.flibustier.TrackedEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flibustier.TrackedEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flibustier.TrackedEntry}
 */
proto.flibustier.TrackedEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.flibustier.EntryType} */ (reader.readEnum());
      msg.setEntryType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntryName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEntryId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumEntries(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 6:
      var value = new proto.flibustier.Book;
      reader.readMessage(value,proto.flibustier.Book.deserializeBinaryFromReader);
      msg.addBook(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flibustier.TrackedEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flibustier.TrackedEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flibustier.TrackedEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.TrackedEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getEntryName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEntryId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getNumEntries();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBookList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.flibustier.Book.serializeBinaryToWriter
    );
  }
};


/**
 * optional EntryType entry_type = 1;
 * @return {!proto.flibustier.EntryType}
 */
proto.flibustier.TrackedEntry.prototype.getEntryType = function() {
  return /** @type {!proto.flibustier.EntryType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.flibustier.EntryType} value
 * @return {!proto.flibustier.TrackedEntry} returns this
 */
proto.flibustier.TrackedEntry.prototype.setEntryType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string entry_name = 2;
 * @return {string}
 */
proto.flibustier.TrackedEntry.prototype.getEntryName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flibustier.TrackedEntry} returns this
 */
proto.flibustier.TrackedEntry.prototype.setEntryName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 entry_id = 3;
 * @return {number}
 */
proto.flibustier.TrackedEntry.prototype.getEntryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.flibustier.TrackedEntry} returns this
 */
proto.flibustier.TrackedEntry.prototype.setEntryId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 num_entries = 4;
 * @return {number}
 */
proto.flibustier.TrackedEntry.prototype.getNumEntries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.flibustier.TrackedEntry} returns this
 */
proto.flibustier.TrackedEntry.prototype.setNumEntries = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string user_id = 5;
 * @return {string}
 */
proto.flibustier.TrackedEntry.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.flibustier.TrackedEntry} returns this
 */
proto.flibustier.TrackedEntry.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated Book book = 6;
 * @return {!Array<!proto.flibustier.Book>}
 */
proto.flibustier.TrackedEntry.prototype.getBookList = function() {
  return /** @type{!Array<!proto.flibustier.Book>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flibustier.Book, 6));
};


/**
 * @param {!Array<!proto.flibustier.Book>} value
 * @return {!proto.flibustier.TrackedEntry} returns this
*/
proto.flibustier.TrackedEntry.prototype.setBookList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.flibustier.Book=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flibustier.Book}
 */
proto.flibustier.TrackedEntry.prototype.addBook = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.flibustier.Book, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flibustier.TrackedEntry} returns this
 */
proto.flibustier.TrackedEntry.prototype.clearBookList = function() {
  return this.setBookList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flibustier.UpdateRequired.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flibustier.UpdateRequired.prototype.toObject = function(opt_includeInstance) {
  return proto.flibustier.UpdateRequired.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flibustier.UpdateRequired} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.UpdateRequired.toObject = function(includeInstance, msg) {
  var f, obj = {
    trackedEntry: (f = msg.getTrackedEntry()) && proto.flibustier.TrackedEntry.toObject(includeInstance, f),
    newNumEntries: jspb.Message.getFieldWithDefault(msg, 2, 0),
    newBookList: jspb.Message.toObjectList(msg.getNewBookList(),
    proto.flibustier.Book.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flibustier.UpdateRequired}
 */
proto.flibustier.UpdateRequired.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flibustier.UpdateRequired;
  return proto.flibustier.UpdateRequired.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flibustier.UpdateRequired} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flibustier.UpdateRequired}
 */
proto.flibustier.UpdateRequired.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flibustier.TrackedEntry;
      reader.readMessage(value,proto.flibustier.TrackedEntry.deserializeBinaryFromReader);
      msg.setTrackedEntry(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNewNumEntries(value);
      break;
    case 3:
      var value = new proto.flibustier.Book;
      reader.readMessage(value,proto.flibustier.Book.deserializeBinaryFromReader);
      msg.addNewBook(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flibustier.UpdateRequired.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flibustier.UpdateRequired.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flibustier.UpdateRequired} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.UpdateRequired.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrackedEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flibustier.TrackedEntry.serializeBinaryToWriter
    );
  }
  f = message.getNewNumEntries();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getNewBookList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.flibustier.Book.serializeBinaryToWriter
    );
  }
};


/**
 * optional TrackedEntry tracked_entry = 1;
 * @return {?proto.flibustier.TrackedEntry}
 */
proto.flibustier.UpdateRequired.prototype.getTrackedEntry = function() {
  return /** @type{?proto.flibustier.TrackedEntry} */ (
    jspb.Message.getWrapperField(this, proto.flibustier.TrackedEntry, 1));
};


/**
 * @param {?proto.flibustier.TrackedEntry|undefined} value
 * @return {!proto.flibustier.UpdateRequired} returns this
*/
proto.flibustier.UpdateRequired.prototype.setTrackedEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flibustier.UpdateRequired} returns this
 */
proto.flibustier.UpdateRequired.prototype.clearTrackedEntry = function() {
  return this.setTrackedEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flibustier.UpdateRequired.prototype.hasTrackedEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 new_num_entries = 2;
 * @return {number}
 */
proto.flibustier.UpdateRequired.prototype.getNewNumEntries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.flibustier.UpdateRequired} returns this
 */
proto.flibustier.UpdateRequired.prototype.setNewNumEntries = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated Book new_book = 3;
 * @return {!Array<!proto.flibustier.Book>}
 */
proto.flibustier.UpdateRequired.prototype.getNewBookList = function() {
  return /** @type{!Array<!proto.flibustier.Book>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flibustier.Book, 3));
};


/**
 * @param {!Array<!proto.flibustier.Book>} value
 * @return {!proto.flibustier.UpdateRequired} returns this
*/
proto.flibustier.UpdateRequired.prototype.setNewBookList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.flibustier.Book=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flibustier.Book}
 */
proto.flibustier.UpdateRequired.prototype.addNewBook = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.flibustier.Book, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flibustier.UpdateRequired} returns this
 */
proto.flibustier.UpdateRequired.prototype.clearNewBookList = function() {
  return this.setNewBookList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flibustier.UpdateCheckRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flibustier.UpdateCheckRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flibustier.UpdateCheckRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flibustier.UpdateCheckRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.UpdateCheckRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    trackedEntryList: jspb.Message.toObjectList(msg.getTrackedEntryList(),
    proto.flibustier.TrackedEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flibustier.UpdateCheckRequest}
 */
proto.flibustier.UpdateCheckRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flibustier.UpdateCheckRequest;
  return proto.flibustier.UpdateCheckRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flibustier.UpdateCheckRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flibustier.UpdateCheckRequest}
 */
proto.flibustier.UpdateCheckRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flibustier.TrackedEntry;
      reader.readMessage(value,proto.flibustier.TrackedEntry.deserializeBinaryFromReader);
      msg.addTrackedEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flibustier.UpdateCheckRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flibustier.UpdateCheckRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flibustier.UpdateCheckRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.UpdateCheckRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrackedEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.flibustier.TrackedEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TrackedEntry tracked_entry = 1;
 * @return {!Array<!proto.flibustier.TrackedEntry>}
 */
proto.flibustier.UpdateCheckRequest.prototype.getTrackedEntryList = function() {
  return /** @type{!Array<!proto.flibustier.TrackedEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flibustier.TrackedEntry, 1));
};


/**
 * @param {!Array<!proto.flibustier.TrackedEntry>} value
 * @return {!proto.flibustier.UpdateCheckRequest} returns this
*/
proto.flibustier.UpdateCheckRequest.prototype.setTrackedEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.flibustier.TrackedEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flibustier.TrackedEntry}
 */
proto.flibustier.UpdateCheckRequest.prototype.addTrackedEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.flibustier.TrackedEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flibustier.UpdateCheckRequest} returns this
 */
proto.flibustier.UpdateCheckRequest.prototype.clearTrackedEntryList = function() {
  return this.setTrackedEntryList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flibustier.UpdateCheckResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flibustier.UpdateCheckResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.flibustier.UpdateCheckResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flibustier.UpdateCheckResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.UpdateCheckResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    updateRequiredList: jspb.Message.toObjectList(msg.getUpdateRequiredList(),
    proto.flibustier.UpdateRequired.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flibustier.UpdateCheckResponse}
 */
proto.flibustier.UpdateCheckResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flibustier.UpdateCheckResponse;
  return proto.flibustier.UpdateCheckResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flibustier.UpdateCheckResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flibustier.UpdateCheckResponse}
 */
proto.flibustier.UpdateCheckResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flibustier.UpdateRequired;
      reader.readMessage(value,proto.flibustier.UpdateRequired.deserializeBinaryFromReader);
      msg.addUpdateRequired(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flibustier.UpdateCheckResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flibustier.UpdateCheckResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flibustier.UpdateCheckResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.UpdateCheckResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdateRequiredList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.flibustier.UpdateRequired.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UpdateRequired update_required = 1;
 * @return {!Array<!proto.flibustier.UpdateRequired>}
 */
proto.flibustier.UpdateCheckResponse.prototype.getUpdateRequiredList = function() {
  return /** @type{!Array<!proto.flibustier.UpdateRequired>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flibustier.UpdateRequired, 1));
};


/**
 * @param {!Array<!proto.flibustier.UpdateRequired>} value
 * @return {!proto.flibustier.UpdateCheckResponse} returns this
*/
proto.flibustier.UpdateCheckResponse.prototype.setUpdateRequiredList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.flibustier.UpdateRequired=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flibustier.UpdateRequired}
 */
proto.flibustier.UpdateCheckResponse.prototype.addUpdateRequired = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.flibustier.UpdateRequired, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flibustier.UpdateCheckResponse} returns this
 */
proto.flibustier.UpdateCheckResponse.prototype.clearUpdateRequiredList = function() {
  return this.setUpdateRequiredList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flibustier.SequenceBooksRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flibustier.SequenceBooksRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flibustier.SequenceBooksRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.SequenceBooksRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flibustier.SequenceBooksRequest}
 */
proto.flibustier.SequenceBooksRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flibustier.SequenceBooksRequest;
  return proto.flibustier.SequenceBooksRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flibustier.SequenceBooksRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flibustier.SequenceBooksRequest}
 */
proto.flibustier.SequenceBooksRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flibustier.SequenceBooksRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flibustier.SequenceBooksRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flibustier.SequenceBooksRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.SequenceBooksRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 sequence_id = 1;
 * @return {number}
 */
proto.flibustier.SequenceBooksRequest.prototype.getSequenceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.flibustier.SequenceBooksRequest} returns this
 */
proto.flibustier.SequenceBooksRequest.prototype.setSequenceId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flibustier.AuthorBooksRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flibustier.AuthorBooksRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flibustier.AuthorBooksRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.AuthorBooksRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flibustier.AuthorBooksRequest}
 */
proto.flibustier.AuthorBooksRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flibustier.AuthorBooksRequest;
  return proto.flibustier.AuthorBooksRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flibustier.AuthorBooksRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flibustier.AuthorBooksRequest}
 */
proto.flibustier.AuthorBooksRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAuthorId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flibustier.AuthorBooksRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flibustier.AuthorBooksRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flibustier.AuthorBooksRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.AuthorBooksRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 author_id = 1;
 * @return {number}
 */
proto.flibustier.AuthorBooksRequest.prototype.getAuthorId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.flibustier.AuthorBooksRequest} returns this
 */
proto.flibustier.AuthorBooksRequest.prototype.setAuthorId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flibustier.EntityBookResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flibustier.EntityBookResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.flibustier.EntityBookResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flibustier.EntityBookResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.EntityBookResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    bookList: jspb.Message.toObjectList(msg.getBookList(),
    proto.flibustier.Book.toObject, includeInstance),
    entityName: (f = msg.getEntityName()) && proto.flibustier.EntityName.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flibustier.EntityBookResponse}
 */
proto.flibustier.EntityBookResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flibustier.EntityBookResponse;
  return proto.flibustier.EntityBookResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flibustier.EntityBookResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flibustier.EntityBookResponse}
 */
proto.flibustier.EntityBookResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEntityId(value);
      break;
    case 2:
      var value = new proto.flibustier.Book;
      reader.readMessage(value,proto.flibustier.Book.deserializeBinaryFromReader);
      msg.addBook(value);
      break;
    case 3:
      var value = new proto.flibustier.EntityName;
      reader.readMessage(value,proto.flibustier.EntityName.deserializeBinaryFromReader);
      msg.setEntityName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flibustier.EntityBookResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flibustier.EntityBookResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flibustier.EntityBookResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.EntityBookResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getBookList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.flibustier.Book.serializeBinaryToWriter
    );
  }
  f = message.getEntityName();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.flibustier.EntityName.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 entity_id = 1;
 * @return {number}
 */
proto.flibustier.EntityBookResponse.prototype.getEntityId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.flibustier.EntityBookResponse} returns this
 */
proto.flibustier.EntityBookResponse.prototype.setEntityId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Book book = 2;
 * @return {!Array<!proto.flibustier.Book>}
 */
proto.flibustier.EntityBookResponse.prototype.getBookList = function() {
  return /** @type{!Array<!proto.flibustier.Book>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flibustier.Book, 2));
};


/**
 * @param {!Array<!proto.flibustier.Book>} value
 * @return {!proto.flibustier.EntityBookResponse} returns this
*/
proto.flibustier.EntityBookResponse.prototype.setBookList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.flibustier.Book=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flibustier.Book}
 */
proto.flibustier.EntityBookResponse.prototype.addBook = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.flibustier.Book, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flibustier.EntityBookResponse} returns this
 */
proto.flibustier.EntityBookResponse.prototype.clearBookList = function() {
  return this.setBookList([]);
};


/**
 * optional EntityName entity_name = 3;
 * @return {?proto.flibustier.EntityName}
 */
proto.flibustier.EntityBookResponse.prototype.getEntityName = function() {
  return /** @type{?proto.flibustier.EntityName} */ (
    jspb.Message.getWrapperField(this, proto.flibustier.EntityName, 3));
};


/**
 * @param {?proto.flibustier.EntityName|undefined} value
 * @return {!proto.flibustier.EntityBookResponse} returns this
*/
proto.flibustier.EntityBookResponse.prototype.setEntityName = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flibustier.EntityBookResponse} returns this
 */
proto.flibustier.EntityBookResponse.prototype.clearEntityName = function() {
  return this.setEntityName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flibustier.EntityBookResponse.prototype.hasEntityName = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flibustier.AuthorName.prototype.toObject = function(opt_includeInstance) {
  return proto.flibustier.AuthorName.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flibustier.AuthorName} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.AuthorName.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    middleName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flibustier.AuthorName}
 */
proto.flibustier.AuthorName.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flibustier.AuthorName;
  return proto.flibustier.AuthorName.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flibustier.AuthorName} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flibustier.AuthorName}
 */
proto.flibustier.AuthorName.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMiddleName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flibustier.AuthorName.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flibustier.AuthorName.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flibustier.AuthorName} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.AuthorName.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMiddleName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string first_name = 1;
 * @return {string}
 */
proto.flibustier.AuthorName.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flibustier.AuthorName} returns this
 */
proto.flibustier.AuthorName.prototype.setFirstName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string middle_name = 2;
 * @return {string}
 */
proto.flibustier.AuthorName.prototype.getMiddleName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flibustier.AuthorName} returns this
 */
proto.flibustier.AuthorName.prototype.setMiddleName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string last_name = 3;
 * @return {string}
 */
proto.flibustier.AuthorName.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flibustier.AuthorName} returns this
 */
proto.flibustier.AuthorName.prototype.setLastName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flibustier.EntityName.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.flibustier.EntityName.NameCase = {
  NAME_NOT_SET: 0,
  AUTHOR_NAME: 1,
  SEQUENCE_NAME: 2
};

/**
 * @return {proto.flibustier.EntityName.NameCase}
 */
proto.flibustier.EntityName.prototype.getNameCase = function() {
  return /** @type {proto.flibustier.EntityName.NameCase} */(jspb.Message.computeOneofCase(this, proto.flibustier.EntityName.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flibustier.EntityName.prototype.toObject = function(opt_includeInstance) {
  return proto.flibustier.EntityName.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flibustier.EntityName} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.EntityName.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorName: (f = msg.getAuthorName()) && proto.flibustier.AuthorName.toObject(includeInstance, f),
    sequenceName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flibustier.EntityName}
 */
proto.flibustier.EntityName.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flibustier.EntityName;
  return proto.flibustier.EntityName.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flibustier.EntityName} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flibustier.EntityName}
 */
proto.flibustier.EntityName.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flibustier.AuthorName;
      reader.readMessage(value,proto.flibustier.AuthorName.deserializeBinaryFromReader);
      msg.setAuthorName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSequenceName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flibustier.EntityName.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flibustier.EntityName.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flibustier.EntityName} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.EntityName.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flibustier.AuthorName.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional AuthorName author_name = 1;
 * @return {?proto.flibustier.AuthorName}
 */
proto.flibustier.EntityName.prototype.getAuthorName = function() {
  return /** @type{?proto.flibustier.AuthorName} */ (
    jspb.Message.getWrapperField(this, proto.flibustier.AuthorName, 1));
};


/**
 * @param {?proto.flibustier.AuthorName|undefined} value
 * @return {!proto.flibustier.EntityName} returns this
*/
proto.flibustier.EntityName.prototype.setAuthorName = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.flibustier.EntityName.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flibustier.EntityName} returns this
 */
proto.flibustier.EntityName.prototype.clearAuthorName = function() {
  return this.setAuthorName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flibustier.EntityName.prototype.hasAuthorName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string sequence_name = 2;
 * @return {string}
 */
proto.flibustier.EntityName.prototype.getSequenceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flibustier.EntityName} returns this
 */
proto.flibustier.EntityName.prototype.setSequenceName = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.flibustier.EntityName.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.flibustier.EntityName} returns this
 */
proto.flibustier.EntityName.prototype.clearSequenceName = function() {
  return jspb.Message.setOneofField(this, 2, proto.flibustier.EntityName.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flibustier.EntityName.prototype.hasSequenceName = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flibustier.TrackedEntryKey.prototype.toObject = function(opt_includeInstance) {
  return proto.flibustier.TrackedEntryKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flibustier.TrackedEntryKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.TrackedEntryKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    entityId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flibustier.TrackedEntryKey}
 */
proto.flibustier.TrackedEntryKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flibustier.TrackedEntryKey;
  return proto.flibustier.TrackedEntryKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flibustier.TrackedEntryKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flibustier.TrackedEntryKey}
 */
proto.flibustier.TrackedEntryKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.flibustier.EntryType} */ (reader.readEnum());
      msg.setEntityType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEntityId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flibustier.TrackedEntryKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flibustier.TrackedEntryKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flibustier.TrackedEntryKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.TrackedEntryKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getEntityId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional EntryType entity_type = 1;
 * @return {!proto.flibustier.EntryType}
 */
proto.flibustier.TrackedEntryKey.prototype.getEntityType = function() {
  return /** @type {!proto.flibustier.EntryType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.flibustier.EntryType} value
 * @return {!proto.flibustier.TrackedEntryKey} returns this
 */
proto.flibustier.TrackedEntryKey.prototype.setEntityType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 entity_id = 2;
 * @return {number}
 */
proto.flibustier.TrackedEntryKey.prototype.getEntityId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.flibustier.TrackedEntryKey} returns this
 */
proto.flibustier.TrackedEntryKey.prototype.setEntityId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string user_id = 3;
 * @return {string}
 */
proto.flibustier.TrackedEntryKey.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flibustier.TrackedEntryKey} returns this
 */
proto.flibustier.TrackedEntryKey.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flibustier.TrackEntryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.flibustier.TrackEntryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flibustier.TrackEntryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.TrackEntryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = msg.getKey()) && proto.flibustier.TrackedEntryKey.toObject(includeInstance, f),
    result: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flibustier.TrackEntryResponse}
 */
proto.flibustier.TrackEntryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flibustier.TrackEntryResponse;
  return proto.flibustier.TrackEntryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flibustier.TrackEntryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flibustier.TrackEntryResponse}
 */
proto.flibustier.TrackEntryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flibustier.TrackedEntryKey;
      reader.readMessage(value,proto.flibustier.TrackedEntryKey.deserializeBinaryFromReader);
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!proto.flibustier.TrackEntryResult} */ (reader.readEnum());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flibustier.TrackEntryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flibustier.TrackEntryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flibustier.TrackEntryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.TrackEntryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flibustier.TrackedEntryKey.serializeBinaryToWriter
    );
  }
  f = message.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional TrackedEntryKey key = 1;
 * @return {?proto.flibustier.TrackedEntryKey}
 */
proto.flibustier.TrackEntryResponse.prototype.getKey = function() {
  return /** @type{?proto.flibustier.TrackedEntryKey} */ (
    jspb.Message.getWrapperField(this, proto.flibustier.TrackedEntryKey, 1));
};


/**
 * @param {?proto.flibustier.TrackedEntryKey|undefined} value
 * @return {!proto.flibustier.TrackEntryResponse} returns this
*/
proto.flibustier.TrackEntryResponse.prototype.setKey = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flibustier.TrackEntryResponse} returns this
 */
proto.flibustier.TrackEntryResponse.prototype.clearKey = function() {
  return this.setKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flibustier.TrackEntryResponse.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TrackEntryResult result = 2;
 * @return {!proto.flibustier.TrackEntryResult}
 */
proto.flibustier.TrackEntryResponse.prototype.getResult = function() {
  return /** @type {!proto.flibustier.TrackEntryResult} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.flibustier.TrackEntryResult} value
 * @return {!proto.flibustier.TrackEntryResponse} returns this
 */
proto.flibustier.TrackEntryResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flibustier.ListTrackedEntriesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flibustier.ListTrackedEntriesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flibustier.ListTrackedEntriesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.ListTrackedEntriesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flibustier.ListTrackedEntriesRequest}
 */
proto.flibustier.ListTrackedEntriesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flibustier.ListTrackedEntriesRequest;
  return proto.flibustier.ListTrackedEntriesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flibustier.ListTrackedEntriesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flibustier.ListTrackedEntriesRequest}
 */
proto.flibustier.ListTrackedEntriesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flibustier.ListTrackedEntriesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flibustier.ListTrackedEntriesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flibustier.ListTrackedEntriesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.ListTrackedEntriesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.flibustier.ListTrackedEntriesRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flibustier.ListTrackedEntriesRequest} returns this
 */
proto.flibustier.ListTrackedEntriesRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flibustier.ListTrackedEntriesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flibustier.ListTrackedEntriesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.flibustier.ListTrackedEntriesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flibustier.ListTrackedEntriesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.ListTrackedEntriesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.flibustier.TrackedEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flibustier.ListTrackedEntriesResponse}
 */
proto.flibustier.ListTrackedEntriesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flibustier.ListTrackedEntriesResponse;
  return proto.flibustier.ListTrackedEntriesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flibustier.ListTrackedEntriesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flibustier.ListTrackedEntriesResponse}
 */
proto.flibustier.ListTrackedEntriesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flibustier.TrackedEntry;
      reader.readMessage(value,proto.flibustier.TrackedEntry.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flibustier.ListTrackedEntriesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flibustier.ListTrackedEntriesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flibustier.ListTrackedEntriesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.ListTrackedEntriesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.flibustier.TrackedEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TrackedEntry entry = 1;
 * @return {!Array<!proto.flibustier.TrackedEntry>}
 */
proto.flibustier.ListTrackedEntriesResponse.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.flibustier.TrackedEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flibustier.TrackedEntry, 1));
};


/**
 * @param {!Array<!proto.flibustier.TrackedEntry>} value
 * @return {!proto.flibustier.ListTrackedEntriesResponse} returns this
*/
proto.flibustier.ListTrackedEntriesResponse.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.flibustier.TrackedEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flibustier.TrackedEntry}
 */
proto.flibustier.ListTrackedEntriesResponse.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.flibustier.TrackedEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flibustier.ListTrackedEntriesResponse} returns this
 */
proto.flibustier.ListTrackedEntriesResponse.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flibustier.UntrackEntryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.flibustier.UntrackEntryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flibustier.UntrackEntryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.UntrackEntryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = msg.getKey()) && proto.flibustier.TrackedEntryKey.toObject(includeInstance, f),
    result: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flibustier.UntrackEntryResponse}
 */
proto.flibustier.UntrackEntryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flibustier.UntrackEntryResponse;
  return proto.flibustier.UntrackEntryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flibustier.UntrackEntryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flibustier.UntrackEntryResponse}
 */
proto.flibustier.UntrackEntryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flibustier.TrackedEntryKey;
      reader.readMessage(value,proto.flibustier.TrackedEntryKey.deserializeBinaryFromReader);
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!proto.flibustier.UntrackEntryResult} */ (reader.readEnum());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flibustier.UntrackEntryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flibustier.UntrackEntryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flibustier.UntrackEntryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flibustier.UntrackEntryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flibustier.TrackedEntryKey.serializeBinaryToWriter
    );
  }
  f = message.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional TrackedEntryKey key = 1;
 * @return {?proto.flibustier.TrackedEntryKey}
 */
proto.flibustier.UntrackEntryResponse.prototype.getKey = function() {
  return /** @type{?proto.flibustier.TrackedEntryKey} */ (
    jspb.Message.getWrapperField(this, proto.flibustier.TrackedEntryKey, 1));
};


/**
 * @param {?proto.flibustier.TrackedEntryKey|undefined} value
 * @return {!proto.flibustier.UntrackEntryResponse} returns this
*/
proto.flibustier.UntrackEntryResponse.prototype.setKey = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flibustier.UntrackEntryResponse} returns this
 */
proto.flibustier.UntrackEntryResponse.prototype.clearKey = function() {
  return this.setKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flibustier.UntrackEntryResponse.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UntrackEntryResult result = 2;
 * @return {!proto.flibustier.UntrackEntryResult}
 */
proto.flibustier.UntrackEntryResponse.prototype.getResult = function() {
  return /** @type {!proto.flibustier.UntrackEntryResult} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.flibustier.UntrackEntryResult} value
 * @return {!proto.flibustier.UntrackEntryResponse} returns this
 */
proto.flibustier.UntrackEntryResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.flibustier.EntryType = {
  UNKNOWN: 0,
  SERIES: 1,
  AUTHOR: 2,
  BOOK: 3
};

/**
 * @enum {number}
 */
proto.flibustier.TrackEntryResult = {
  TRACK_OK: 0,
  TRACK_ALREADY_TRACKED: 1
};

/**
 * @enum {number}
 */
proto.flibustier.UntrackEntryResult = {
  UNTRACK_OK: 0,
  UNTRACK_NOT_TRACKED: 1
};

goog.object.extend(exports, proto.flibustier);

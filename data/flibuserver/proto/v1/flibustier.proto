syntax = "proto3";

option go_package = "flibustaimporter/flibuserver/proto";
option java_multiple_files = true;
option java_package = "com.sgzmd.flibustier.proto";
option java_outer_classname = "FlibustierProto";

import "google/protobuf/timestamp.proto";

/*
To compile:

protoc  --plugin="protoc-gen-ts=/usr/local/bin/protoc-gen-ts" \
  --go_out=. --go_opt=paths=source_relative  \
  --go-grpc_out=. --go-grpc_opt=paths=source_relative flibustier.proto

~/code/node_modules/.bin/protoc-gen-grpc-ts --ts_out=./ \
  --js_out="import_style=commonjs,binary:./" ./flibustier.proto

use this for TS: https://github.com/timostamm/protobuf-ts

*/

package flibuserver.proto.v1;

service FlibustierService {
  rpc GlobalSearch (GlobalSearchRequest) returns (GlobalSearchResponse) {}
  rpc CheckUpdates (CheckUpdatesRequest) returns (CheckUpdatesResponse) {}
  rpc GetSeriesBooks (GetSeriesBooksRequest) returns (GetSeriesBooksResponse) {}
  rpc GetAuthorBooks (GetAuthorBooksRequest) returns (GetAuthorBooksResponse) {}

  rpc TrackEntry (TrackEntryRequest) returns (TrackEntryResponse) {}
  rpc ListTrackedEntries (ListTrackedEntriesRequest) returns (ListTrackedEntriesResponse) {}
  rpc UntrackEntry (UntrackEntryRequest) returns (UntrackEntryResponse) {}
}

enum EntryType {
  ENTRY_TYPE_UNSPECIFIED = 0;
  ENTRY_TYPE_SERIES = 1;
  ENTRY_TYPE_AUTHOR = 2;
  ENTRY_TYPE_BOOK = 3;
}

message GlobalSearchRequest {
  string search_term = 1;
  EntryType entry_type_filter = 2;
}

message FoundEntry {
  EntryType entry_type = 1;
  string entry_name = 2;
  string author = 3;
  int64 entry_id = 4;
  int32 num_entities = 5;
}

message GlobalSearchResponse {
  GlobalSearchRequest original_request = 1;
  repeated FoundEntry entry = 2;
}

message Book {
  string book_name = 1;
  int32 book_id = 2;
}

message TrackedEntry {
  EntryType entry_type = 1;
  string entry_name = 2;
  int64 entry_id = 3;
  int32 num_entries = 4;
  string user_id = 5;

  repeated Book book = 6;

  google.protobuf.Timestamp saved = 7;
}

message TrackEntryRequest {
  int64  entry_id = 1;
  EntryType entry_type = 2;
  string user_id = 3;
}

message UpdateRequired {
  TrackedEntry tracked_entry = 1;
  int32 new_num_entries = 2;
  repeated Book new_book = 3;
}

message CheckUpdatesRequest {
  repeated TrackedEntry tracked_entry = 1;
}

message CheckUpdatesResponse {
  repeated UpdateRequired update_required = 1;
}

message GetSeriesBooksRequest {
  int32 sequence_id = 1;
}

message GetAuthorBooksRequest {
  int32 author_id = 1;
}

message EntityBookResponse {
  int32 entity_id = 1;
  repeated Book book = 2;
  EntityName entity_name = 3;
}

message GetSeriesBooksResponse {
  EntityBookResponse entity_book_response = 1;
}

message GetAuthorBooksResponse {
  EntityBookResponse entity_book_response = 1;
}

message AuthorName {
  string first_name = 1;
  string middle_name = 2;
  string last_name = 3;
}

message EntityName {
  oneof name {
    AuthorName author_name = 1;
    string sequence_name = 2;
  }
}

message TrackedEntryKey {
  EntryType entity_type = 1;  
  int64 entity_id = 2;
  string user_id = 3;
}

message UntrackEntryRequest {
  TrackedEntryKey key = 1;
}

enum TrackEntryResult {
  TRACK_ENTRY_RESULT_UNSPECIFIED = 0;
  TRACK_ENTRY_RESULT_OK = 1;
  TRACK_ENTRY_RESULT_ALREADY_TRACKED = 2;
}

message TrackEntryResponse {
  TrackedEntryKey key = 1;
  TrackEntryResult result = 2;
}

message ListTrackedEntriesRequest {
  string user_id = 1;
}

message ListTrackedEntriesResponse {
  repeated TrackedEntry entry = 1;
}

enum UntrackEntryResult {
  UNTRACK_ENTRY_RESULT_UNSPECIFIED = 0;
  UNTRACK_ENTRY_RESULT_OK = 1;
  UNTRACK_ENTRY_RESULT_NOT_TRACKED = 2;
}
message UntrackEntryResponse {
  TrackedEntryKey key = 1;
  UntrackEntryResult result = 2;
}
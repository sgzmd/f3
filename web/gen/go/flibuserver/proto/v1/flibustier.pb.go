// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: flibuserver/proto/v1/flibustier.proto

//
//To compile:
//
//protoc  --plugin="protoc-gen-ts=/usr/local/bin/protoc-gen-ts" \
// --go_out=. --go_opt=paths=source_relative  \
// --go-grpc_out=. --go-grpc_opt=paths=source_relative flibustier.proto
//
//~/code/node_modules/.bin/protoc-gen-grpc-ts --ts_out=./ \
// --js_out="import_style=commonjs,binary:./" ./flibustier.proto
//
//use this for TS: https://github.com/timostamm/protobuf-ts
//

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntryType int32

const (
	EntryType_ENTRY_TYPE_UNSPECIFIED EntryType = 0
	EntryType_ENTRY_TYPE_SERIES      EntryType = 1
	EntryType_ENTRY_TYPE_AUTHOR      EntryType = 2
	EntryType_ENTRY_TYPE_BOOK        EntryType = 3
)

// Enum value maps for EntryType.
var (
	EntryType_name = map[int32]string{
		0: "ENTRY_TYPE_UNSPECIFIED",
		1: "ENTRY_TYPE_SERIES",
		2: "ENTRY_TYPE_AUTHOR",
		3: "ENTRY_TYPE_BOOK",
	}
	EntryType_value = map[string]int32{
		"ENTRY_TYPE_UNSPECIFIED": 0,
		"ENTRY_TYPE_SERIES":      1,
		"ENTRY_TYPE_AUTHOR":      2,
		"ENTRY_TYPE_BOOK":        3,
	}
)

func (x EntryType) Enum() *EntryType {
	p := new(EntryType)
	*p = x
	return p
}

func (x EntryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntryType) Descriptor() protoreflect.EnumDescriptor {
	return file_flibuserver_proto_v1_flibustier_proto_enumTypes[0].Descriptor()
}

func (EntryType) Type() protoreflect.EnumType {
	return &file_flibuserver_proto_v1_flibustier_proto_enumTypes[0]
}

func (x EntryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntryType.Descriptor instead.
func (EntryType) EnumDescriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{0}
}

type TrackEntryResult int32

const (
	TrackEntryResult_TRACK_ENTRY_RESULT_UNSPECIFIED     TrackEntryResult = 0
	TrackEntryResult_TRACK_ENTRY_RESULT_OK              TrackEntryResult = 1
	TrackEntryResult_TRACK_ENTRY_RESULT_ALREADY_TRACKED TrackEntryResult = 2
)

// Enum value maps for TrackEntryResult.
var (
	TrackEntryResult_name = map[int32]string{
		0: "TRACK_ENTRY_RESULT_UNSPECIFIED",
		1: "TRACK_ENTRY_RESULT_OK",
		2: "TRACK_ENTRY_RESULT_ALREADY_TRACKED",
	}
	TrackEntryResult_value = map[string]int32{
		"TRACK_ENTRY_RESULT_UNSPECIFIED":     0,
		"TRACK_ENTRY_RESULT_OK":              1,
		"TRACK_ENTRY_RESULT_ALREADY_TRACKED": 2,
	}
)

func (x TrackEntryResult) Enum() *TrackEntryResult {
	p := new(TrackEntryResult)
	*p = x
	return p
}

func (x TrackEntryResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrackEntryResult) Descriptor() protoreflect.EnumDescriptor {
	return file_flibuserver_proto_v1_flibustier_proto_enumTypes[1].Descriptor()
}

func (TrackEntryResult) Type() protoreflect.EnumType {
	return &file_flibuserver_proto_v1_flibustier_proto_enumTypes[1]
}

func (x TrackEntryResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrackEntryResult.Descriptor instead.
func (TrackEntryResult) EnumDescriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{1}
}

type UntrackEntryResult int32

const (
	UntrackEntryResult_UNTRACK_ENTRY_RESULT_UNSPECIFIED UntrackEntryResult = 0
	UntrackEntryResult_UNTRACK_ENTRY_RESULT_OK          UntrackEntryResult = 1
	UntrackEntryResult_UNTRACK_ENTRY_RESULT_NOT_TRACKED UntrackEntryResult = 2
)

// Enum value maps for UntrackEntryResult.
var (
	UntrackEntryResult_name = map[int32]string{
		0: "UNTRACK_ENTRY_RESULT_UNSPECIFIED",
		1: "UNTRACK_ENTRY_RESULT_OK",
		2: "UNTRACK_ENTRY_RESULT_NOT_TRACKED",
	}
	UntrackEntryResult_value = map[string]int32{
		"UNTRACK_ENTRY_RESULT_UNSPECIFIED": 0,
		"UNTRACK_ENTRY_RESULT_OK":          1,
		"UNTRACK_ENTRY_RESULT_NOT_TRACKED": 2,
	}
)

func (x UntrackEntryResult) Enum() *UntrackEntryResult {
	p := new(UntrackEntryResult)
	*p = x
	return p
}

func (x UntrackEntryResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UntrackEntryResult) Descriptor() protoreflect.EnumDescriptor {
	return file_flibuserver_proto_v1_flibustier_proto_enumTypes[2].Descriptor()
}

func (UntrackEntryResult) Type() protoreflect.EnumType {
	return &file_flibuserver_proto_v1_flibustier_proto_enumTypes[2]
}

func (x UntrackEntryResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UntrackEntryResult.Descriptor instead.
func (UntrackEntryResult) EnumDescriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{2}
}

type GlobalSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchTerm      string    `protobuf:"bytes,1,opt,name=search_term,json=searchTerm,proto3" json:"search_term,omitempty"`
	EntryTypeFilter EntryType `protobuf:"varint,2,opt,name=entry_type_filter,json=entryTypeFilter,proto3,enum=flibuserver.proto.v1.EntryType" json:"entry_type_filter,omitempty"`
}

func (x *GlobalSearchRequest) Reset() {
	*x = GlobalSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSearchRequest) ProtoMessage() {}

func (x *GlobalSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSearchRequest.ProtoReflect.Descriptor instead.
func (*GlobalSearchRequest) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{0}
}

func (x *GlobalSearchRequest) GetSearchTerm() string {
	if x != nil {
		return x.SearchTerm
	}
	return ""
}

func (x *GlobalSearchRequest) GetEntryTypeFilter() EntryType {
	if x != nil {
		return x.EntryTypeFilter
	}
	return EntryType_ENTRY_TYPE_UNSPECIFIED
}

type FoundEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntryType   EntryType `protobuf:"varint,1,opt,name=entry_type,json=entryType,proto3,enum=flibuserver.proto.v1.EntryType" json:"entry_type,omitempty"`
	EntryName   string    `protobuf:"bytes,2,opt,name=entry_name,json=entryName,proto3" json:"entry_name,omitempty"`
	Author      string    `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	EntryId     int64     `protobuf:"varint,4,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	NumEntities int32     `protobuf:"varint,5,opt,name=num_entities,json=numEntities,proto3" json:"num_entities,omitempty"`
}

func (x *FoundEntry) Reset() {
	*x = FoundEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoundEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoundEntry) ProtoMessage() {}

func (x *FoundEntry) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoundEntry.ProtoReflect.Descriptor instead.
func (*FoundEntry) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{1}
}

func (x *FoundEntry) GetEntryType() EntryType {
	if x != nil {
		return x.EntryType
	}
	return EntryType_ENTRY_TYPE_UNSPECIFIED
}

func (x *FoundEntry) GetEntryName() string {
	if x != nil {
		return x.EntryName
	}
	return ""
}

func (x *FoundEntry) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *FoundEntry) GetEntryId() int64 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *FoundEntry) GetNumEntities() int32 {
	if x != nil {
		return x.NumEntities
	}
	return 0
}

type GlobalSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalRequest *GlobalSearchRequest `protobuf:"bytes,1,opt,name=original_request,json=originalRequest,proto3" json:"original_request,omitempty"`
	Entry           []*FoundEntry        `protobuf:"bytes,2,rep,name=entry,proto3" json:"entry,omitempty"`
}

func (x *GlobalSearchResponse) Reset() {
	*x = GlobalSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSearchResponse) ProtoMessage() {}

func (x *GlobalSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSearchResponse.ProtoReflect.Descriptor instead.
func (*GlobalSearchResponse) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{2}
}

func (x *GlobalSearchResponse) GetOriginalRequest() *GlobalSearchRequest {
	if x != nil {
		return x.OriginalRequest
	}
	return nil
}

func (x *GlobalSearchResponse) GetEntry() []*FoundEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type Book struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookName string `protobuf:"bytes,1,opt,name=book_name,json=bookName,proto3" json:"book_name,omitempty"`
	BookId   int32  `protobuf:"varint,2,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
}

func (x *Book) Reset() {
	*x = Book{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Book) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Book) ProtoMessage() {}

func (x *Book) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Book.ProtoReflect.Descriptor instead.
func (*Book) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{3}
}

func (x *Book) GetBookName() string {
	if x != nil {
		return x.BookName
	}
	return ""
}

func (x *Book) GetBookId() int32 {
	if x != nil {
		return x.BookId
	}
	return 0
}

type TrackedEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        *TrackedEntryKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	EntryName  string           `protobuf:"bytes,2,opt,name=entry_name,json=entryName,proto3" json:"entry_name,omitempty"`
	NumEntries int32            `protobuf:"varint,4,opt,name=num_entries,json=numEntries,proto3" json:"num_entries,omitempty"`
	// Equals to entry_name if AUTHOR
	EntryAuthor string                 `protobuf:"bytes,5,opt,name=entry_author,json=entryAuthor,proto3" json:"entry_author,omitempty"`
	Book        []*Book                `protobuf:"bytes,6,rep,name=book,proto3" json:"book,omitempty"`
	Saved       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=saved,proto3" json:"saved,omitempty"`
}

func (x *TrackedEntry) Reset() {
	*x = TrackedEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackedEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackedEntry) ProtoMessage() {}

func (x *TrackedEntry) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackedEntry.ProtoReflect.Descriptor instead.
func (*TrackedEntry) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{4}
}

func (x *TrackedEntry) GetKey() *TrackedEntryKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *TrackedEntry) GetEntryName() string {
	if x != nil {
		return x.EntryName
	}
	return ""
}

func (x *TrackedEntry) GetNumEntries() int32 {
	if x != nil {
		return x.NumEntries
	}
	return 0
}

func (x *TrackedEntry) GetEntryAuthor() string {
	if x != nil {
		return x.EntryAuthor
	}
	return ""
}

func (x *TrackedEntry) GetBook() []*Book {
	if x != nil {
		return x.Book
	}
	return nil
}

func (x *TrackedEntry) GetSaved() *timestamppb.Timestamp {
	if x != nil {
		return x.Saved
	}
	return nil
}

type TrackEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *TrackedEntryKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Re-track entry even if it already exists
	ForceUpdate bool `protobuf:"varint,2,opt,name=force_update,json=forceUpdate,proto3" json:"force_update,omitempty"`
}

func (x *TrackEntryRequest) Reset() {
	*x = TrackEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackEntryRequest) ProtoMessage() {}

func (x *TrackEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackEntryRequest.ProtoReflect.Descriptor instead.
func (*TrackEntryRequest) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{5}
}

func (x *TrackEntryRequest) GetKey() *TrackedEntryKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *TrackEntryRequest) GetForceUpdate() bool {
	if x != nil {
		return x.ForceUpdate
	}
	return false
}

type UpdateRequired struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackedEntry  *TrackedEntry `protobuf:"bytes,1,opt,name=tracked_entry,json=trackedEntry,proto3" json:"tracked_entry,omitempty"`
	NewNumEntries int32         `protobuf:"varint,2,opt,name=new_num_entries,json=newNumEntries,proto3" json:"new_num_entries,omitempty"`
	NewBook       []*Book       `protobuf:"bytes,3,rep,name=new_book,json=newBook,proto3" json:"new_book,omitempty"`
}

func (x *UpdateRequired) Reset() {
	*x = UpdateRequired{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequired) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequired) ProtoMessage() {}

func (x *UpdateRequired) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequired.ProtoReflect.Descriptor instead.
func (*UpdateRequired) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateRequired) GetTrackedEntry() *TrackedEntry {
	if x != nil {
		return x.TrackedEntry
	}
	return nil
}

func (x *UpdateRequired) GetNewNumEntries() int32 {
	if x != nil {
		return x.NewNumEntries
	}
	return 0
}

func (x *UpdateRequired) GetNewBook() []*Book {
	if x != nil {
		return x.NewBook
	}
	return nil
}

type CheckUpdatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackedEntry []*TrackedEntry `protobuf:"bytes,1,rep,name=tracked_entry,json=trackedEntry,proto3" json:"tracked_entry,omitempty"`
}

func (x *CheckUpdatesRequest) Reset() {
	*x = CheckUpdatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUpdatesRequest) ProtoMessage() {}

func (x *CheckUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUpdatesRequest.ProtoReflect.Descriptor instead.
func (*CheckUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{7}
}

func (x *CheckUpdatesRequest) GetTrackedEntry() []*TrackedEntry {
	if x != nil {
		return x.TrackedEntry
	}
	return nil
}

type CheckUpdatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateRequired []*UpdateRequired `protobuf:"bytes,1,rep,name=update_required,json=updateRequired,proto3" json:"update_required,omitempty"`
}

func (x *CheckUpdatesResponse) Reset() {
	*x = CheckUpdatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUpdatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUpdatesResponse) ProtoMessage() {}

func (x *CheckUpdatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUpdatesResponse.ProtoReflect.Descriptor instead.
func (*CheckUpdatesResponse) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{8}
}

func (x *CheckUpdatesResponse) GetUpdateRequired() []*UpdateRequired {
	if x != nil {
		return x.UpdateRequired
	}
	return nil
}

type GetSeriesBooksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceId int32 `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId,proto3" json:"sequence_id,omitempty"`
}

func (x *GetSeriesBooksRequest) Reset() {
	*x = GetSeriesBooksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeriesBooksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeriesBooksRequest) ProtoMessage() {}

func (x *GetSeriesBooksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeriesBooksRequest.ProtoReflect.Descriptor instead.
func (*GetSeriesBooksRequest) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{9}
}

func (x *GetSeriesBooksRequest) GetSequenceId() int32 {
	if x != nil {
		return x.SequenceId
	}
	return 0
}

type GetAuthorBooksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorId int32 `protobuf:"varint,1,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
}

func (x *GetAuthorBooksRequest) Reset() {
	*x = GetAuthorBooksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthorBooksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorBooksRequest) ProtoMessage() {}

func (x *GetAuthorBooksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorBooksRequest.ProtoReflect.Descriptor instead.
func (*GetAuthorBooksRequest) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{10}
}

func (x *GetAuthorBooksRequest) GetAuthorId() int32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type EntityBookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId   int32       `protobuf:"varint,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Book       []*Book     `protobuf:"bytes,2,rep,name=book,proto3" json:"book,omitempty"`
	EntityName *EntityName `protobuf:"bytes,3,opt,name=entity_name,json=entityName,proto3" json:"entity_name,omitempty"`
}

func (x *EntityBookResponse) Reset() {
	*x = EntityBookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityBookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityBookResponse) ProtoMessage() {}

func (x *EntityBookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityBookResponse.ProtoReflect.Descriptor instead.
func (*EntityBookResponse) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{11}
}

func (x *EntityBookResponse) GetEntityId() int32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EntityBookResponse) GetBook() []*Book {
	if x != nil {
		return x.Book
	}
	return nil
}

func (x *EntityBookResponse) GetEntityName() *EntityName {
	if x != nil {
		return x.EntityName
	}
	return nil
}

type GetSeriesBooksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityBookResponse *EntityBookResponse `protobuf:"bytes,1,opt,name=entity_book_response,json=entityBookResponse,proto3" json:"entity_book_response,omitempty"`
}

func (x *GetSeriesBooksResponse) Reset() {
	*x = GetSeriesBooksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeriesBooksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeriesBooksResponse) ProtoMessage() {}

func (x *GetSeriesBooksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeriesBooksResponse.ProtoReflect.Descriptor instead.
func (*GetSeriesBooksResponse) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{12}
}

func (x *GetSeriesBooksResponse) GetEntityBookResponse() *EntityBookResponse {
	if x != nil {
		return x.EntityBookResponse
	}
	return nil
}

type GetAuthorBooksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityBookResponse *EntityBookResponse `protobuf:"bytes,1,opt,name=entity_book_response,json=entityBookResponse,proto3" json:"entity_book_response,omitempty"`
}

func (x *GetAuthorBooksResponse) Reset() {
	*x = GetAuthorBooksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthorBooksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorBooksResponse) ProtoMessage() {}

func (x *GetAuthorBooksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorBooksResponse.ProtoReflect.Descriptor instead.
func (*GetAuthorBooksResponse) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{13}
}

func (x *GetAuthorBooksResponse) GetEntityBookResponse() *EntityBookResponse {
	if x != nil {
		return x.EntityBookResponse
	}
	return nil
}

type AuthorName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName  string `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	MiddleName string `protobuf:"bytes,2,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	LastName   string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
}

func (x *AuthorName) Reset() {
	*x = AuthorName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorName) ProtoMessage() {}

func (x *AuthorName) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorName.ProtoReflect.Descriptor instead.
func (*AuthorName) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{14}
}

func (x *AuthorName) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *AuthorName) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *AuthorName) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

type EntityName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Name:
	//	*EntityName_AuthorName
	//	*EntityName_SequenceName
	Name isEntityName_Name `protobuf_oneof:"name"`
}

func (x *EntityName) Reset() {
	*x = EntityName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityName) ProtoMessage() {}

func (x *EntityName) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityName.ProtoReflect.Descriptor instead.
func (*EntityName) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{15}
}

func (m *EntityName) GetName() isEntityName_Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (x *EntityName) GetAuthorName() *AuthorName {
	if x, ok := x.GetName().(*EntityName_AuthorName); ok {
		return x.AuthorName
	}
	return nil
}

func (x *EntityName) GetSequenceName() string {
	if x, ok := x.GetName().(*EntityName_SequenceName); ok {
		return x.SequenceName
	}
	return ""
}

type isEntityName_Name interface {
	isEntityName_Name()
}

type EntityName_AuthorName struct {
	AuthorName *AuthorName `protobuf:"bytes,1,opt,name=author_name,json=authorName,proto3,oneof"`
}

type EntityName_SequenceName struct {
	SequenceName string `protobuf:"bytes,2,opt,name=sequence_name,json=sequenceName,proto3,oneof"`
}

func (*EntityName_AuthorName) isEntityName_Name() {}

func (*EntityName_SequenceName) isEntityName_Name() {}

type TrackedEntryKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityType EntryType `protobuf:"varint,1,opt,name=entity_type,json=entityType,proto3,enum=flibuserver.proto.v1.EntryType" json:"entity_type,omitempty"`
	EntityId   int64     `protobuf:"varint,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	UserId     string    `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *TrackedEntryKey) Reset() {
	*x = TrackedEntryKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackedEntryKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackedEntryKey) ProtoMessage() {}

func (x *TrackedEntryKey) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackedEntryKey.ProtoReflect.Descriptor instead.
func (*TrackedEntryKey) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{16}
}

func (x *TrackedEntryKey) GetEntityType() EntryType {
	if x != nil {
		return x.EntityType
	}
	return EntryType_ENTRY_TYPE_UNSPECIFIED
}

func (x *TrackedEntryKey) GetEntityId() int64 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *TrackedEntryKey) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UntrackEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *TrackedEntryKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *UntrackEntryRequest) Reset() {
	*x = UntrackEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UntrackEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UntrackEntryRequest) ProtoMessage() {}

func (x *UntrackEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UntrackEntryRequest.ProtoReflect.Descriptor instead.
func (*UntrackEntryRequest) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{17}
}

func (x *UntrackEntryRequest) GetKey() *TrackedEntryKey {
	if x != nil {
		return x.Key
	}
	return nil
}

type TrackEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    *TrackedEntryKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Result TrackEntryResult `protobuf:"varint,2,opt,name=result,proto3,enum=flibuserver.proto.v1.TrackEntryResult" json:"result,omitempty"`
}

func (x *TrackEntryResponse) Reset() {
	*x = TrackEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackEntryResponse) ProtoMessage() {}

func (x *TrackEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackEntryResponse.ProtoReflect.Descriptor instead.
func (*TrackEntryResponse) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{18}
}

func (x *TrackEntryResponse) GetKey() *TrackedEntryKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *TrackEntryResponse) GetResult() TrackEntryResult {
	if x != nil {
		return x.Result
	}
	return TrackEntryResult_TRACK_ENTRY_RESULT_UNSPECIFIED
}

type ListTrackedEntriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ListTrackedEntriesRequest) Reset() {
	*x = ListTrackedEntriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTrackedEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrackedEntriesRequest) ProtoMessage() {}

func (x *ListTrackedEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrackedEntriesRequest.ProtoReflect.Descriptor instead.
func (*ListTrackedEntriesRequest) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{19}
}

func (x *ListTrackedEntriesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListTrackedEntriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry []*TrackedEntry `protobuf:"bytes,1,rep,name=entry,proto3" json:"entry,omitempty"`
}

func (x *ListTrackedEntriesResponse) Reset() {
	*x = ListTrackedEntriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTrackedEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrackedEntriesResponse) ProtoMessage() {}

func (x *ListTrackedEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrackedEntriesResponse.ProtoReflect.Descriptor instead.
func (*ListTrackedEntriesResponse) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{20}
}

func (x *ListTrackedEntriesResponse) GetEntry() []*TrackedEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type UntrackEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    *TrackedEntryKey   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Result UntrackEntryResult `protobuf:"varint,2,opt,name=result,proto3,enum=flibuserver.proto.v1.UntrackEntryResult" json:"result,omitempty"`
}

func (x *UntrackEntryResponse) Reset() {
	*x = UntrackEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UntrackEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UntrackEntryResponse) ProtoMessage() {}

func (x *UntrackEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flibuserver_proto_v1_flibustier_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UntrackEntryResponse.ProtoReflect.Descriptor instead.
func (*UntrackEntryResponse) Descriptor() ([]byte, []int) {
	return file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP(), []int{21}
}

func (x *UntrackEntryResponse) GetKey() *TrackedEntryKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *UntrackEntryResponse) GetResult() UntrackEntryResult {
	if x != nil {
		return x.Result
	}
	return UntrackEntryResult_UNTRACK_ENTRY_RESULT_UNSPECIFIED
}

var File_flibuserver_proto_v1_flibustier_proto protoreflect.FileDescriptor

var file_flibuserver_proto_v1_flibustier_proto_rawDesc = []byte{
	0x0a, 0x25, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x74, 0x69, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x83,
	0x01, 0x0a, 0x13, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x4b, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x22, 0xc1, 0x01, 0x0a, 0x0a, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x3e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e, 0x75, 0x6d,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x14, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66, 0x6c,
	0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22,
	0x3c, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x22, 0x8c, 0x02,
	0x0a, 0x0c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x37,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x6c,
	0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4b,
	0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x75, 0x6d,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x04, 0x62, 0x6f,
	0x6f, 0x6b, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x61,
	0x76, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x61, 0x76, 0x65, 0x64, 0x22, 0x6f, 0x0a, 0x11,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0xb8, 0x01,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x12, 0x47, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x77,
	0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x35, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52,
	0x07, 0x6e, 0x65, 0x77, 0x42, 0x6f, 0x6f, 0x6b, 0x22, 0x5e, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x47, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x65, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4d, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x6c, 0x69, 0x62,
	0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52,
	0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22,
	0x38, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42, 0x6f, 0x6f, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x22,
	0xa4, 0x01, 0x0a, 0x12, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x04, 0x62,
	0x6f, 0x6f, 0x6b, 0x12, 0x41, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x74, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5a, 0x0a, 0x14, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x12, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x74, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x14, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x12,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x69, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x80, 0x01,
	0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0b,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0d, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x89, 0x01, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x4b, 0x65, 0x79, 0x12, 0x40, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x69, 0x62,
	0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x13,
	0x55, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x8d, 0x01, 0x0a,
	0x12, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x66,
	0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x34, 0x0a, 0x19,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x56, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x38, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x91, 0x01, 0x0a, 0x14, 0x55,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x40, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x66,
	0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2a, 0x6a,
	0x0a, 0x09, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x45,
	0x4e, 0x54, 0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x4e, 0x54, 0x52, 0x59,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x49, 0x45, 0x53, 0x10, 0x01, 0x12, 0x15,
	0x0a, 0x11, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x55, 0x54,
	0x48, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x4f, 0x4b, 0x10, 0x03, 0x2a, 0x79, 0x0a, 0x10, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22,
	0x0a, 0x1e, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x52, 0x45,
	0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x5f, 0x45, 0x4e, 0x54, 0x52,
	0x59, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x26, 0x0a,
	0x22, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x53,
	0x55, 0x4c, 0x54, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x54, 0x52, 0x41, 0x43,
	0x4b, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x7d, 0x0a, 0x12, 0x55, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x20, 0x55,
	0x4e, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x53,
	0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x5f, 0x45, 0x4e, 0x54,
	0x52, 0x59, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x24,
	0x0a, 0x20, 0x55, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f,
	0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x43, 0x4b,
	0x45, 0x44, 0x10, 0x02, 0x32, 0x8a, 0x06, 0x0a, 0x11, 0x46, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x74,
	0x69, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x67, 0x0a, 0x0c, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x29, 0x2e, 0x66, 0x6c, 0x69,
	0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x2b,
	0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42,
	0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x66, 0x6c,
	0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42, 0x6f, 0x6f, 0x6b,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x2b, 0x2e,
	0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x42, 0x6f,
	0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x66, 0x6c, 0x69,
	0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0a, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x27, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x2f, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x0c, 0x55, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x29, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x53, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x67, 0x7a, 0x6d, 0x64, 0x2e, 0x66,
	0x6c, 0x69, 0x62, 0x75, 0x73, 0x74, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x0f, 0x46, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x74, 0x69, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x22, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x72, 0x2f, 0x66, 0x6c, 0x69, 0x62, 0x75, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flibuserver_proto_v1_flibustier_proto_rawDescOnce sync.Once
	file_flibuserver_proto_v1_flibustier_proto_rawDescData = file_flibuserver_proto_v1_flibustier_proto_rawDesc
)

func file_flibuserver_proto_v1_flibustier_proto_rawDescGZIP() []byte {
	file_flibuserver_proto_v1_flibustier_proto_rawDescOnce.Do(func() {
		file_flibuserver_proto_v1_flibustier_proto_rawDescData = protoimpl.X.CompressGZIP(file_flibuserver_proto_v1_flibustier_proto_rawDescData)
	})
	return file_flibuserver_proto_v1_flibustier_proto_rawDescData
}

var file_flibuserver_proto_v1_flibustier_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_flibuserver_proto_v1_flibustier_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_flibuserver_proto_v1_flibustier_proto_goTypes = []interface{}{
	(EntryType)(0),                     // 0: flibuserver.proto.v1.EntryType
	(TrackEntryResult)(0),              // 1: flibuserver.proto.v1.TrackEntryResult
	(UntrackEntryResult)(0),            // 2: flibuserver.proto.v1.UntrackEntryResult
	(*GlobalSearchRequest)(nil),        // 3: flibuserver.proto.v1.GlobalSearchRequest
	(*FoundEntry)(nil),                 // 4: flibuserver.proto.v1.FoundEntry
	(*GlobalSearchResponse)(nil),       // 5: flibuserver.proto.v1.GlobalSearchResponse
	(*Book)(nil),                       // 6: flibuserver.proto.v1.Book
	(*TrackedEntry)(nil),               // 7: flibuserver.proto.v1.TrackedEntry
	(*TrackEntryRequest)(nil),          // 8: flibuserver.proto.v1.TrackEntryRequest
	(*UpdateRequired)(nil),             // 9: flibuserver.proto.v1.UpdateRequired
	(*CheckUpdatesRequest)(nil),        // 10: flibuserver.proto.v1.CheckUpdatesRequest
	(*CheckUpdatesResponse)(nil),       // 11: flibuserver.proto.v1.CheckUpdatesResponse
	(*GetSeriesBooksRequest)(nil),      // 12: flibuserver.proto.v1.GetSeriesBooksRequest
	(*GetAuthorBooksRequest)(nil),      // 13: flibuserver.proto.v1.GetAuthorBooksRequest
	(*EntityBookResponse)(nil),         // 14: flibuserver.proto.v1.EntityBookResponse
	(*GetSeriesBooksResponse)(nil),     // 15: flibuserver.proto.v1.GetSeriesBooksResponse
	(*GetAuthorBooksResponse)(nil),     // 16: flibuserver.proto.v1.GetAuthorBooksResponse
	(*AuthorName)(nil),                 // 17: flibuserver.proto.v1.AuthorName
	(*EntityName)(nil),                 // 18: flibuserver.proto.v1.EntityName
	(*TrackedEntryKey)(nil),            // 19: flibuserver.proto.v1.TrackedEntryKey
	(*UntrackEntryRequest)(nil),        // 20: flibuserver.proto.v1.UntrackEntryRequest
	(*TrackEntryResponse)(nil),         // 21: flibuserver.proto.v1.TrackEntryResponse
	(*ListTrackedEntriesRequest)(nil),  // 22: flibuserver.proto.v1.ListTrackedEntriesRequest
	(*ListTrackedEntriesResponse)(nil), // 23: flibuserver.proto.v1.ListTrackedEntriesResponse
	(*UntrackEntryResponse)(nil),       // 24: flibuserver.proto.v1.UntrackEntryResponse
	(*timestamppb.Timestamp)(nil),      // 25: google.protobuf.Timestamp
}
var file_flibuserver_proto_v1_flibustier_proto_depIdxs = []int32{
	0,  // 0: flibuserver.proto.v1.GlobalSearchRequest.entry_type_filter:type_name -> flibuserver.proto.v1.EntryType
	0,  // 1: flibuserver.proto.v1.FoundEntry.entry_type:type_name -> flibuserver.proto.v1.EntryType
	3,  // 2: flibuserver.proto.v1.GlobalSearchResponse.original_request:type_name -> flibuserver.proto.v1.GlobalSearchRequest
	4,  // 3: flibuserver.proto.v1.GlobalSearchResponse.entry:type_name -> flibuserver.proto.v1.FoundEntry
	19, // 4: flibuserver.proto.v1.TrackedEntry.key:type_name -> flibuserver.proto.v1.TrackedEntryKey
	6,  // 5: flibuserver.proto.v1.TrackedEntry.book:type_name -> flibuserver.proto.v1.Book
	25, // 6: flibuserver.proto.v1.TrackedEntry.saved:type_name -> google.protobuf.Timestamp
	19, // 7: flibuserver.proto.v1.TrackEntryRequest.key:type_name -> flibuserver.proto.v1.TrackedEntryKey
	7,  // 8: flibuserver.proto.v1.UpdateRequired.tracked_entry:type_name -> flibuserver.proto.v1.TrackedEntry
	6,  // 9: flibuserver.proto.v1.UpdateRequired.new_book:type_name -> flibuserver.proto.v1.Book
	7,  // 10: flibuserver.proto.v1.CheckUpdatesRequest.tracked_entry:type_name -> flibuserver.proto.v1.TrackedEntry
	9,  // 11: flibuserver.proto.v1.CheckUpdatesResponse.update_required:type_name -> flibuserver.proto.v1.UpdateRequired
	6,  // 12: flibuserver.proto.v1.EntityBookResponse.book:type_name -> flibuserver.proto.v1.Book
	18, // 13: flibuserver.proto.v1.EntityBookResponse.entity_name:type_name -> flibuserver.proto.v1.EntityName
	14, // 14: flibuserver.proto.v1.GetSeriesBooksResponse.entity_book_response:type_name -> flibuserver.proto.v1.EntityBookResponse
	14, // 15: flibuserver.proto.v1.GetAuthorBooksResponse.entity_book_response:type_name -> flibuserver.proto.v1.EntityBookResponse
	17, // 16: flibuserver.proto.v1.EntityName.author_name:type_name -> flibuserver.proto.v1.AuthorName
	0,  // 17: flibuserver.proto.v1.TrackedEntryKey.entity_type:type_name -> flibuserver.proto.v1.EntryType
	19, // 18: flibuserver.proto.v1.UntrackEntryRequest.key:type_name -> flibuserver.proto.v1.TrackedEntryKey
	19, // 19: flibuserver.proto.v1.TrackEntryResponse.key:type_name -> flibuserver.proto.v1.TrackedEntryKey
	1,  // 20: flibuserver.proto.v1.TrackEntryResponse.result:type_name -> flibuserver.proto.v1.TrackEntryResult
	7,  // 21: flibuserver.proto.v1.ListTrackedEntriesResponse.entry:type_name -> flibuserver.proto.v1.TrackedEntry
	19, // 22: flibuserver.proto.v1.UntrackEntryResponse.key:type_name -> flibuserver.proto.v1.TrackedEntryKey
	2,  // 23: flibuserver.proto.v1.UntrackEntryResponse.result:type_name -> flibuserver.proto.v1.UntrackEntryResult
	3,  // 24: flibuserver.proto.v1.FlibustierService.GlobalSearch:input_type -> flibuserver.proto.v1.GlobalSearchRequest
	10, // 25: flibuserver.proto.v1.FlibustierService.CheckUpdates:input_type -> flibuserver.proto.v1.CheckUpdatesRequest
	12, // 26: flibuserver.proto.v1.FlibustierService.GetSeriesBooks:input_type -> flibuserver.proto.v1.GetSeriesBooksRequest
	13, // 27: flibuserver.proto.v1.FlibustierService.GetAuthorBooks:input_type -> flibuserver.proto.v1.GetAuthorBooksRequest
	8,  // 28: flibuserver.proto.v1.FlibustierService.TrackEntry:input_type -> flibuserver.proto.v1.TrackEntryRequest
	22, // 29: flibuserver.proto.v1.FlibustierService.ListTrackedEntries:input_type -> flibuserver.proto.v1.ListTrackedEntriesRequest
	20, // 30: flibuserver.proto.v1.FlibustierService.UntrackEntry:input_type -> flibuserver.proto.v1.UntrackEntryRequest
	5,  // 31: flibuserver.proto.v1.FlibustierService.GlobalSearch:output_type -> flibuserver.proto.v1.GlobalSearchResponse
	11, // 32: flibuserver.proto.v1.FlibustierService.CheckUpdates:output_type -> flibuserver.proto.v1.CheckUpdatesResponse
	15, // 33: flibuserver.proto.v1.FlibustierService.GetSeriesBooks:output_type -> flibuserver.proto.v1.GetSeriesBooksResponse
	16, // 34: flibuserver.proto.v1.FlibustierService.GetAuthorBooks:output_type -> flibuserver.proto.v1.GetAuthorBooksResponse
	21, // 35: flibuserver.proto.v1.FlibustierService.TrackEntry:output_type -> flibuserver.proto.v1.TrackEntryResponse
	23, // 36: flibuserver.proto.v1.FlibustierService.ListTrackedEntries:output_type -> flibuserver.proto.v1.ListTrackedEntriesResponse
	24, // 37: flibuserver.proto.v1.FlibustierService.UntrackEntry:output_type -> flibuserver.proto.v1.UntrackEntryResponse
	31, // [31:38] is the sub-list for method output_type
	24, // [24:31] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_flibuserver_proto_v1_flibustier_proto_init() }
func file_flibuserver_proto_v1_flibustier_proto_init() {
	if File_flibuserver_proto_v1_flibustier_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoundEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Book); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackedEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequired); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUpdatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUpdatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSeriesBooksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthorBooksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityBookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSeriesBooksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthorBooksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackedEntryKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UntrackEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTrackedEntriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTrackedEntriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flibuserver_proto_v1_flibustier_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UntrackEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_flibuserver_proto_v1_flibustier_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*EntityName_AuthorName)(nil),
		(*EntityName_SequenceName)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flibuserver_proto_v1_flibustier_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_flibuserver_proto_v1_flibustier_proto_goTypes,
		DependencyIndexes: file_flibuserver_proto_v1_flibustier_proto_depIdxs,
		EnumInfos:         file_flibuserver_proto_v1_flibustier_proto_enumTypes,
		MessageInfos:      file_flibuserver_proto_v1_flibustier_proto_msgTypes,
	}.Build()
	File_flibuserver_proto_v1_flibustier_proto = out.File
	file_flibuserver_proto_v1_flibustier_proto_rawDesc = nil
	file_flibuserver_proto_v1_flibustier_proto_goTypes = nil
	file_flibuserver_proto_v1_flibustier_proto_depIdxs = nil
}

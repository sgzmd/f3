// Code generated by MockGen. DO NOT EDIT.
// Source: telegrambot/tgwrappers.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	gomock "github.com/golang/mock/gomock"
)

// MockIBotApiWrapper is a mock of IBotApiWrapper interface.
type MockIBotApiWrapper struct {
	ctrl     *gomock.Controller
	recorder *MockIBotApiWrapperMockRecorder
}

// MockIBotApiWrapperMockRecorder is the mock recorder for MockIBotApiWrapper.
type MockIBotApiWrapperMockRecorder struct {
	mock *MockIBotApiWrapper
}

// NewMockIBotApiWrapper creates a new mock instance.
func NewMockIBotApiWrapper(ctrl *gomock.Controller) *MockIBotApiWrapper {
	mock := &MockIBotApiWrapper{ctrl: ctrl}
	mock.recorder = &MockIBotApiWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIBotApiWrapper) EXPECT() *MockIBotApiWrapperMockRecorder {
	return m.recorder
}

// Send mocks base method.
func (m *MockIBotApiWrapper) Send(msg tgbotapi.MessageConfig) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Send", msg)
}

// Send indicates an expected call of Send.
func (mr *MockIBotApiWrapperMockRecorder) Send(msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockIBotApiWrapper)(nil).Send), msg)
}
